version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres-punktozaur
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: punktozaurdb
    ports:
      - "5432:5432"
    networks:
      - postgres_network_punktozaur
    volumes:
      - postgres_punktozaur:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

      #######################################################
      #  Kafka
      #######################################################
  kafka:
    image: confluentinc/confluent-local:7.6.1
    hostname: kafka
    container_name: kafka-punktozaur
    networks:
      - kafka_network_punktozaur
    ports:
      - "9092:9092"
      - "9091:9091"
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 5s
      timeout: 10s
      retries: 100
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_HOSTNAME: 127.0.0.1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  init-kafka:
    image: confluentinc/confluent-local:7.6.1
    hostname: init-kafka
    container_name: init-kafka-punktozaur
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    networks:
      - kafka_network_punktozaur
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list
      
      echo -e 'Deleting kafka topics'
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic customer-events --delete --if-exists
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic loyalty-commands --delete --if-exists
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic customer-events --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic loyalty-commands --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "


    #######################################################
    #  Schema Registry
    #######################################################
  schema_registry:
    image: confluentinc/cp-schema-registry:7.6.1
    container_name: schema_registry-punktozaur
    hostname: schema_registry
    ports:
      - 8181:8181
      - 8081:8081
    depends_on:
      - kafka
    networks:
      - kafka_network_punktozaur
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,OPTIONS'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
      SCHEMA_LOG4J_ROOT_LOGLEVEL: 'ERROR'
      SCHEMA_TOOLS_LOG4J_LOGLEVEL: 'ERROR'

  kafka_topics_ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-punktozaur
    hostname: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema_registry:8081
    networks:
      - kafka_network_punktozaur
    depends_on:
      - kafka
      - schema_registry

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data_punktozaur:/var/lib/pgadmin
    networks:
      - postgres_punktozaur

networks:
  postgres_network_punktozaur:
    driver: bridge
  kafka_network_punktozaur:
    driver: bridge

volumes:
  postgres_punktozaur:
  pgadmin-data_punktozaur:
